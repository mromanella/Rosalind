package main

import (
	"fmt"
	"strings"

	"../utils"
)

// Problem
// An RNA string is a string formed from the alphabet containing 'A', 'C', 'G', and 'U'.

// Given a DNA string t corresponding to a coding strand, its transcribed RNA string u is formed by replacing all occurrences of 'T' in t with 'U' in u.

// Given: A DNA string t having length at most 1000 nt.

// Return: The transcribed RNA string of t.

var (
	thymine = "T"
	uracil  = "U"

	testString = "GATGGAACTTGACTACGTAAATT"
	expected   = "GAUGGAACUUGACUACGUAAAUU"
	expected2  = "CUUGUGCACCGCACCUCUCCCGAUUCAUCAAGUGUAUUAAUACCGCAAGCUCAUCCCUAGGGUUGCAAUCGCGUCGCGGUAUUCAAGAUCGAUCCACUGAACAACUAGGUUGAUAUCGGUUCUAUAUAAUCUAUCGGAAUGACGAUAAGUAGCCGGAAUCGAGAGAGGCCAAAAAAGACAUGCACCAGGUGAUGUUUUGGGUUCUGUGAGAGUCCGAGACCUUUACUAUCACCUGACUUGUUCCAUCUCCGCUGGCUGCUGGAACAAGGGUAGAUCACUAGUCGUGAAGACCAAGGGCUUAACACAUCGGCAACCCCGCGAGUGUGUCAGGAGUGCCCCCGUGGUCGACACAACUGCGUCCGUACCAAGCCUUUUCUUUGCAACCGCGCCGUAACAGCUGUUUAGGUGUGUCUUAGAGGACGGCGUUUAUGGGAAGUAUGGUAACGCGGAUUAGCUUCAGUAGUAGUGCUAAAACGACUCGACUGCAUCAGCGCGAUGCUUCACCUAACGGUAGCGGUAAGAAGUAUUUGCAAAGGAGUUACUGCCACUUCACAUGGGCCGCGAAAGCACAUUUGGAUCUAACAGUAACGCGACGCAAGUUGUGUAAAGAGCGUUACAGGAAGCCCUGUCAGGUGCGGGUGGGACCCAUUCUGUAGUGCGUAAUAACCGUUUAUAGGUGUUGAUGGUGUUAAACUACAAUGUAAGUACUAACCGAAACGUCCUAACGUUUGUCCCAAUGAAGGACCCAGCAAACCUGACGUGCCUUUCAGAUUCUGUGCGUAUGUUAAGGGUAGAAAAUGAGCUCCAGAUCUAUCGCCUGGCAAAGAACAAGAGCCCACACUGCAGCGGUCAACCUCAGGCGUCUUCUCAGCCUUGCGUCGAAGAAACUCUUUCCCCUGCAAAUCGCGGUAUGGCAGUUCCCGCAUGUCCUUCCAGGUUGUUAGGAUACGUGCGCCGGACACGGAUCCGGUGCUGCAACCUCGAACC"
)

// transcribe transcribes the DNAString into an rna string, replacing thymine with uracil.
func transcribe(DNAString string) string {
	return strings.Replace(DNAString, thymine, uracil, -1) // -1 to replace all occurrences
}

func main() {
	fmt.Println(transcribe(testString) == expected)
	lines, err := utils.ReadLines("rosalind_rna.txt", 0)
	if err != nil {
		panic(err)
	}
	fmt.Println(transcribe(lines[0]))
	fmt.Println(transcribe(lines[0]) == expected2)
}
