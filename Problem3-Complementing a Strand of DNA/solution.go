package main

// Problem
// In DNA strings, symbols 'A' and 'T' are complements of each other, as are 'C' and 'G'.

// The reverse complement of a DNA string s is the string sc formed by reversing the symbols of s, then taking the complement of each symbol (e.g., the reverse complement of "GTCA" is "TGAC").

// Given: A DNA string s of length at most 1000 bp.

// Return: The reverse complement sc of s.

// Sample Dataset
// AAAACCCGGT
// Sample Output
// ACCGGGTTTT.

import (
	"fmt"

	"../utils"
)

var (
	testString = "AAAACCCGGT"
	expected   = "ACCGGGTTTT"
	expected2  = "TCATTTCCAGCTTGCCGCCCCTCTTGTGCGAACATCATCTGACGCAAAAAAGCTAAAGTTGGGAAAGGATGAAGTCACGAGTGATGGCGTATAACACACCTCGATGGTGGGCCTGCCCACTGCCGTTCTGACTTGGCCTGCTGGTTCCCGCCTTCTTCGTCCGGTGCACGCGAGGTGTATAGATCGATCGCCATTTGTGGCTTCACGGAATCGCCATCCAACTTAACGAGCCGCTGCGACCCCGGCCGAATTCTGTTGACAAAACAGAATCAGAATACGTAAGGATACATGATCCTGACTAAGCCAGGCTCGTCCCCTAGAGGGCGCTACAAGCAACCATAGCGCATAGCCTCTCAAGTCGGATAGGAAGGCCCCACCCGTACAGTACGCTTATAACCAGAACCAACTCCCGTTCCCTAGAATTCAGAGCGGCGACCCTCCTAGAGGCGGCGATTGCCGACGGGTCTAATTCCTACGTAATTTGCAAGTGGAGTGAGGTCGTTAAGAATCGAGCTCACCGTAGGAGAAAGCTAGGGGAGGAACGATAGGAATTTCTTAAGTGCACGGCTCTACCTGGCGGTCAGCATTTTCTGGATGCCATCCAGGCGTTACTTCCGACACGCTGTCGCTCCTCGAGCTGGTAGTGGTATATGCTTGTCTAGCGAGAGCGTATTATTACAGGTCAGGGAGGTGGTATCATGTGCAGATTGGGAGGCGGGAACTCTGCCAAATTTAACCCTAAGAAACCGCAGGGGTTCCTTCAATCAATCAGTGCAAGATCCGCGGTGCCGATATTGAGAGTGACGCACCCCCACAAAGTCACAACGGTTATTAATACTGGCACAACTTCGATGAGACCAAACCGTGGGGGCGGTGAAGCGTATCCAGA"
)

func reverseCompliment(DNAString string) string {
	compliment := ""
	runes := []rune(DNAString)
	for i := range DNAString {
		newI := len(DNAString) - 1 - i
		r := string(runes[newI])
		compliment += utils.GetCompliment(r)
	}
	return compliment
}

func main() {
	fmt.Println(reverseCompliment(testString) == expected)
	lines, err := utils.ReadLines("rosalind_revc.txt", 0)
	if err != nil {
		panic(err)
	}
	fmt.Println(reverseCompliment(lines[0]) == expected2)
}
